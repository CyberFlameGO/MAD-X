# |
# o---------------------------------------------------------------------o
# |
# | MAD makefile - personal post-makefile stuff
# |
# o---------------------------------------------------------------------o
# |
# | Methodical Accelerator Design
# |
# | Copyright (c) 2011+ CERN, mad@cern.ch
# |
# | For more information, see http://cern.ch/mad
# |
# o---------------------------------------------------------------------o
# |
# | $Id$
# |

###################################
# Build & Install

.PHONY: madx-release

ifeq ($(OSTYPE),Darwin)
madx-release: madx-info madx-src madx-usrguide madx-install
else ifeq ($(OSTYPE),Linux)
madx-release: madx-install
endif

#
# madx info file
#

.PHONY: madx-info

madx-info:
	$E "*** Building $@"
ifneq ($(OSTYPE),Windows)
	$_ echo "release  $(VERSION)"                   > madx-info.txt ; \
	   echo "`date '+date     %Y.%m.%d %H:%M:%S'`" >> madx-info.txt ; \
	   echo "svn      `svn update`"                >> madx-info.txt ; \
	   echo `grep svn madx-info.txt`
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# madx src tarball
#

.PHONY: madx-src

madx-src:
	$E "*** Building $@"
ifneq ($(OSTYPE),Windows)
	$_ svn export http://svn.cern.ch/guest/madx/trunk/madX madx-$(VERSION) && \
	   tar cvz --exclude madx-$(VERSION)/examples -f madx-src.tgz madx-$(VERSION) && \
	   rm -rf madx-$(VERSION)
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# madx latex user's guide
#
.PHONY: madx-usrguide

madx-usrguide:
	$E "*** Building $@"
ifneq ($(OSTYPE),Windows)
	$_ cd doc/latexuguide ; ./makelatexdoc && cd - && \
	   cp doc/latexuguide/uguide.pdf madxuguide.pdf
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# madx installation (Darwin and Linux only)
#

.PHONY: madx-install

madx-install:
	$E "*** Installing madx"
ifeq ($(OSTYPE),Darwin)
	$_ mkdir $(VERSION) $(VERSION)/reports && \
     rm -f *-gnu *-gnu.* *-intel *-intel.* && \
	   cp -L madx-* libmadx-* libptc-* numdiff-* madx-src.tgz madxuguide.pdf madx-info.txt $(VERSION) && \
	   scp -r $(VERSION) mad@lxplus.cern.ch:madx/releases/ && \
	   rm -rf $(VERSION) && \
	   svn copy https://svn.cern.ch/reps/madx/trunk/ \
	            https://svn.cern.ch/reps/madx/tags/$(VERSION) -m "madx release tag $(VERSION)"
else ifeq ($(OSTYPE),Linux)
	$_ rm -f *-gnu *-gnu.* *-intel *-intel.* *-lahey *-nagfor && \
     scp madx-linux* libmadx-linux* libptc-linux* numdiff-linux* mad@lxplus.cern.ch:madx/releases/$(VERSION) && \
     scp tests/reports/`date "+%Y-%m-%d"`_build-test-*.out mad@lxplus.cern.ch:madx/releases/$(VERSION)/reports && \
     pushd /afs/cern.ch/project/mad/madx/releases && \
     ls -l . $(VERSION) && rm -i last-dev ; ln -s $(VERSION) last-dev && \
     ls -l . last-dev   && popd
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# libptc installation (Linux only)
#

.PHONY: libptc-install

libptc-install:
	$E "*** Installing libptc"
ifeq ($(OSTYPE),Linux)
	$_ scp libptc-linux* mad@lxplus.cern.ch:madx/releases/$(VERSION)
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# numdiff installation (Linux only)
#

.PHONY: numdiff-install

numdiff-install:
	$E "*** Installing numdiff"
ifeq ($(OSTYPE),Darwin)
	$_ scp numdiff-macosx* numdiff-win* mad@lxplus.cern.ch:madx/releases/$(VERSION)
else ifeq ($(OSTYPE),Linux)
	$_ scp numdiff-linux* mad@lxplus.cern.ch:madx/releases/$(VERSION)
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# Makefile_pre/post installation (Darwin only)
#

.PHONY: makefile-install

makefile-install:
	$E "*** Installing $@"
ifneq ($(OSTYPE),Windows)
	$_ scp Makefile_local mad@lxplus.cern.ch:madx/madX
	$_ scp Makefile_local mad@macserv15865.cern.ch:Projects/madX
else
	@echo "*** $@ not supported on $(OSTYPE)"
endif

#
# count number of builds
#

# ifeq  ($(MAKE_RESTARTS),)
# ifneq ($(filter $(BUILDGOALS),$(MAKECMDGOALS)),)
# ifneq ($(OSTYPE),Windows)

# MY_CFIL := $(HOME)/.madx-build-cnt
# MY_CTST := $(wildcard $(MY_CFIL))
# MY_CVAL := $(if $(MY_CTST),$(shell $(CAT) $(MY_CFIL)),0)
# MY_CVAL := $(if $(MY_CVAL),$(MY_CVAL),0)
# MY_CINC := $(shell expr $(MY_CVAL) + 1 > $(MY_CFIL))
# $(info *** Local build number #$(shell $(CAT) $(MY_CFIL)))

# else # Windows

# MY_CFIL := $(HOME)$/.madx-build-cnt
# MY_CTST := $(wildcard $(call s1bs,$(MY_CFIL)))
# MY_CVAL := $(if $(MY_CTST),$(shell $(CAT) "$(MY_CFIL)"),0)
# MY_CVAL := $(if $(MY_CVAL),$(MY_CVAL),0)
# MY_CINC := $(shell expr $(MY_CVAL) + 1 > "$(MY_CFIL)")
# $(info *** Local build number #$(shell $(CAT) "$(MY_CFIL)"))

# endif
# endif
# endif

# end of makefile
