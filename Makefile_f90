# |
# o---------------------------------------------------------------------o
# |
# | MAD makefile - Fortran files selection and dependencies
# |
# o---------------------------------------------------------------------o
# |
# | Methodical Accelerator Design
# |
# | Copyright (c) 2011+ CERN, mad@cern.ch
# |
# | For more information, see http://cern.ch/mad
# |
# o---------------------------------------------------------------------o
# |
# | $Id$
# |

vpath %.inc src
vpath %.f90 src
vpath %.F90 src

FC_DIR := src
FC_SRC := $(notdir $(wildcard src/*.f90 src/*.F90))

ifneq ($(findstring $(OSTYPE),Cygwin Windows),) # no X11
FC_SRC    += gxx11ps.f90
FC_SRC_RM += gxx11.f90
else
FC_SRC    += gxx11.f90
FC_SRC_RM += gxx11ps.f90
endif

ifeq ($(NTPSA),yes)
FC_SRC_RM += c_dabnew.f90
else
FC_SRC_RM += c_dabnew_berz.f90 c_tpsa_interface.F90
endif

# remove unwanted files
FC_SRC := $(filter-out $(FC_SRC_RM),$(FC_SRC))

# files specific compiler flag
matchlib2.o: FFLAGS := $(FFLAGS0)

#######################
# Fortran dependencies (case not automatic!)

ifeq ($(FDEP),)

# chain of dependencies
a_scratch_size.o:           src/a_scratch_size.f90
b_da_arrays_all.o:          src/b_da_arrays_all.f90         a_scratch_size.o
c_dabnew.o:                 src/c_dabnew.f90                b_da_arrays_all.o
c_dabnew_berz.o:            src/c_dabnew_berz.f90           b_da_arrays_all.o
c_tpsa_interface.o:         src/c_tpsa_interface.F90        c_dabnew_berz.o
d_lielib.o:                 src/d_lielib.f90                $(if $(call eq,$(NTPSA),yes),c_tpsa_interface.o,c_dabnew.o)
h_definition.o:             src/h_definition.f90            d_lielib.o
i_tpsa.o:                   src/i_tpsa.f90                  h_definition.o
j_tpsalie.o:                src/j_tpsalie.f90               i_tpsa.o
k_tpsalie_analysis.o:       src/k_tpsalie_analysis.f90      j_tpsalie.o
l_complex_taylor.o:         src/l_complex_taylor.f90        k_tpsalie_analysis.o
m_real_polymorph.o:         src/m_real_polymorph.f90        l_complex_taylor.o
n_complex_polymorph.o:      src/n_complex_polymorph.f90     m_real_polymorph.o
o_tree_element.o:           src/o_tree_element.f90          n_complex_polymorph.o

Sa_extend_poly.o:           src/Sa_extend_poly.f90          o_tree_element.o
Sb_sagan_pol_arbitrary.o:   src/Sb_sagan_pol_arbitrary.f90  Sa_extend_poly.o
Sc_euclidean.o:             src/Sc_euclidean.f90            Sb_sagan_pol_arbitrary.o
Sd_frame.o:                 src/Sd_frame.f90                Sc_euclidean.o
Se_status.o:                src/Se_status.f90               Sd_frame.o
Sf_def_all_kinds.o:         src/Sf_def_all_kinds.f90        Se_status.o
Sg_sagan_wiggler.o:         src/Sg_sagan_wiggler.f90        Sf_def_all_kinds.o
Sh_def_kind.o:              src/Sh_def_kind.f90             Sg_sagan_wiggler.o
Si_def_element.o:           src/Si_def_element.f90          Sh_def_kind.o
Sk_link_list.o:             src/Sk_link_list.f90            Si_def_element.o
Sl_family.o:                src/Sl_family.f90               Sk_link_list.o
Sm_tracking.o:              src/Sm_tracking.f90             Sl_family.o
Sma0_beam_beam_ptc.o:       src/Sma0_beam_beam_ptc.f90      Sm_tracking.o
Sma_multiparticle.o:        src/Sma_multiparticle.f90       Sma0_beam_beam_ptc.o
Sn_mad_like.o:              src/Sn_mad_like.f90             Sma_multiparticle.o
So_fitting.o:               src/So_fitting.f90              Sn_mad_like.o
Sp_keywords.o:              src/Sp_keywords.f90             So_fitting.o
Spb_fake_gino_sub.o:        src/Spb_fake_gino_sub.f90
Sq_orbit_ptc.o:             src/Sq_orbit_ptc.f90            Sp_keywords.o
Sr_spin.o:                  src/Sr_spin.f90                 Sq_orbit_ptc.o
Sra_fitting.o:              src/Sra_fitting.f90             Sr_spin.o
St_pointers.o:              src/St_pointers.f90             madx_ptc_module.o Sp_keywords.o

madx_ptc_distrib.o:         src/madx_ptc_distrib.f90        util.o madx_ptc_module.o
madx_ptc_eplacement.o:      src/madx_ptc_eplacement.f90     util.o madx_ptc_intstate.o madx_ptc_module.o Sp_keywords.o
madx_ptc_intstate.o:        src/madx_ptc_intstate.f90       Sp_keywords.o
madx_ptc_knobs.o:           src/madx_ptc_knobs.f90          util.o madx_ptc_intstate.o Sp_keywords.o
madx_ptc_module.o:          src/madx_ptc_module.f90         util.o madx_ptc_setcavs.o madx_ptc_knobs.o Sra_fitting.o
madx_ptc_normal.o:          src/madx_ptc_normal.f90         madx_ptc_module.o
madx_ptc_script.o:          src/madx_ptc_script.f90         util.o Sp_keywords.o
madx_ptc_setcavs.o:         src/madx_ptc_setcavs.f90        madx_ptc_intstate.o Sp_keywords.o
madx_ptc_trackcavs.o:       src/madx_ptc_trackcavs.f90      util.o madx_ptc_intstate.o madx_ptc_module.o madx_ptc_setcavs.o Sp_keywords.o
madx_ptc_track_run.o:       src/madx_ptc_track_run.f90      util.o madx_ptc_module.o Sp_keywords.o
madx_ptc_twiss.o:           src/madx_ptc_twiss.f90          util.o madx_ptc_module.o madx_ptc_setcavs.o madx_ptc_knobs.o madx_ptc_distrib.o

dynap.o:                    src/dynap.f90                   util.o
emit.o:                     src/emit.f90                    util.o
gxx11.o:                    src/gxx11.f90                   util.o
gxx11ps.o:                  src/gxx11ps.f90                 util.o
ibsdb.o:                    src/ibsdb.f90                   util.o
mad_inif_f.o:               src/mad_inif_f.F90
match.o:                    src/match.f90                   util.o
matchjc.o:                  src/matchjc.f90                 util.o match.o
matchlib.o:                 src/matchlib.f90                matchjc.o
matchlib2.o:                src/matchlib2.f90
matchsa.o:                  src/matchsa.f90                 util.o matchlib.o
orbf.o:                     src/orbf.f90
plot.o:                     src/plot.f90                    util.o
poisson.o:                  src/poisson.f90
ptc_export_xml.o:           src/ptc_export_xml.f90          madx_ptc_module.o
resindex.o:                 src/resindex.f90                util.o
sodd.o:                     src/sodd.f90                    util.o
survey.o:                   src/survey.f90                  util.o
timest.o:                   src/timest.f90
timex.o:                    src/timex.f90
touschek.o:                 src/touschek.f90                util.o
trrun.o:                    src/trrun.f90                   util.o
twiss.o:                    src/twiss.f90                   util.o
user2_photon.o:             src/user2_photon.f90            madx_ptc_track_run.o
util.o:                     src/util.f90

ifneq ($(NOWRAP),yes)
wrap.o:                     src/wrap.f90                    madx_ptc_module.o madx_ptc_intstate.o \
                                                            madx_ptc_normal.o madx_ptc_twiss.o \
                                                            madx_ptc_distrib.o madx_ptc_setcavs.o \
	                                                          madx_ptc_trackcavs.o madx_ptc_knobs.o \
	                                                          madx_ptc_track_run.o madx_ptc_script.o \
	                                                          St_pointers.o ptc_export_xml.o \
	                                                          madx_ptc_eplacement.o
endif

# dependencies on includes
h_definition.o:             src/a_def_frame_patch_chart.inc src/a_def_all_kind.inc \
                            src/a_def_sagan.inc src/a_def_element_fibre_layout.inc
Sf_def_all_kinds.o:         src/a_def_worm.inc
madx_ptc_distrib.o:         src/madx_ptc_distrib.inc
madx_ptc_knobs.o:           src/madx_ptc_knobs.inc
madx_ptc_twiss.o:           src/madx_ptc_knobs.inc src/madx_ptc_distrib.inc
user2_photon.o:             src/photoni.inc

endif

#######################
# check for gfortran version >= 4.4
# set to gfortran44 on lxplus
#

ifneq ($(filter-out $(NOBUILD),$(MAKECMDGOALS)),)
ifeq ($(FC),gfortran)
FCVER  := $(word 4, $(shell $(FC) --version))
FCVERL := $(subst ., ,$(FCVER))
FCVER1 := $(findstring $(word 1,$(FCVERL)),"456789")
FCVER2 := 0
  ifeq ($(FCVER1),4)
  FCVER2 := $(findstring $(word 2,$(FCVERL)),"456789")
  endif
ifeq ($(and $(FCVER1),$(FCVER2)),)
$(warning MAD-X requires gfortran >= 4.4 ($(FCVER) detected), FC set to gfortran44)
FC     := gfortran44
FCNAME := gfortran
endif
endif
endif

# end of makefile
