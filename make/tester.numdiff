# |
# o---------------------------------------------------------------------o
# |
# | MAD makefile - numdiff tester settings
# |
# o---------------------------------------------------------------------o
# |
# | Methodical Accelerator Design
# |
# | Copyright (c) 2011+ CERN, mad@cern.ch
# |
# | For more information, see http://cern.ch/mad
# |
# o---------------------------------------------------------------------o
# |
# | $Id$
# |

#
# numdiff paths
#
ifndef NDIFF
NDIFFCMD := $(firstword $(wildcard \
              $(ND)_dev$(ARCH)$(BINARY_EXT) $(ND)_dev$(BINARY_EXT) \
              $(ND)-dev$(ARCH)$(BINARY_EXT) $(ND)-dev$(BINARY_EXT) \
              $(ND)$(ARCH)$(BINARY_EXT)     $(ND)$(BINARY_EXT) ))
NDIFF_R  := $(if $(NDIFFCMD),..$/..$/$(NDIFFCMD),$(ND)$(BINARY_EXT))
NDIFF_I  := $(if $(NDIFFCMD),.$/$(NDIFFCMD),$(ND)$(BINARY_EXT))
else
NDIFF_R  := $(NDIFF)
NDIFF_I  := $(NDIFF)
endif

#
# numdiff summary
#
NDSUM = tests-summary.txt

#
# numdiff flags
# quiet, ingore blanks, check constraints, list mode, serie mode, debug mode, test title
NDFLAGS = --quiet \
          $(if $(call eq,$(NDDEBUG),yes),--debug,) \
          $(if $(call eq,$(NDTRACE),yes),--trace,) \
          --blank --xcheck --list --serie --accum ..$/$(NDSUM) --test $@

#
# init-test macro
#
define init-test
$_ $(call ND_tr,$(NDIFF_I) --quiet \
                           $(if $(call eq,$(NDDEBUG),yes),--debug,) \
                           $(if $(call eq,$(NDTRACE),yes),--trace,) \
                           --accum tests$/$(NDSUM)) --reset
endef

#
# fini-test macro
#
define fini-test
$_ $(CAT) tests$/$(NDSUM)
endef

#
# run-test macro
#
# $@ = test name & directory
NDFILES_TTST = $(wildcard tests/$@/$@.ref)
NDFILES_ZTST = $(wildcard tests/$@/$@.ref.*)
NDFILES_TREF = $(filter-out $(NDFILES_TTST),$(sort $(wildcard tests/$@/*.ref)))
NDFILES_ZREF = $(filter-out $(NDFILES_ZTST),$(sort $(wildcard tests/$@/*.ref.*)))
NDFILES_REF  = $(NDFILES_TTST) $(NDFILES_ZTST) $(NDFILES_TREF) $(NDFILES_ZREF)
NDFILES_BAS  = $(basename $(NDFILES_TTST) $(basename $(NDFILES_ZTST)) $(NDFILES_TREF) $(basename $(NDFILES_ZREF)))
NDFILES_OUT  = $(addsuffix .out,$(NDFILES_BAS)) $(NDFILES_BAS)

# Remarks line-by-line
# check for .ref files unless NREF=yes
# check for testsuite name ; go to test directory
# delete generated files + cleanup output on Windows (case file not found)
# run the test command (generate outputs)
# for each reference file, diff with the generated file + constraints
# @echo NDFILES_TTST = $(NDFILES_TTST)
# @echo NDFILES_ZTST = $(NDFILES_ZTST)
# @echo NDFILES_TREF = $(NDFILES_TREF)
# @echo NDFILES_ZREF = $(NDFILES_ZREF)
# @echo NDFILES_REF  = $(NDFILES_REF)
# @echo NDFILES_BAS  = $(NDFILES_BAS)
# @echo NDFILES_OUT  = $(NDFILES_OUT)

define run-test
$(if $(call eq,$(NREF),yes),,$(call exists,$(NDFILES_REF),invalid test $@ -- no reference file found))
-$_ $(if $(TESTSUITE),echo [ $(TESTSUITE) ] &&,) \
    cd tests$/$@ && $(RM) $(notdir $(NDFILES_OUT)) \
    $(if $(call eq,$(OSTYPE),Windows),2> _err.txt && $(RM) _err.txt,)
-$_ cd tests$/$@ && $(TESTCMD) > $@.out
-$_ cd tests$/$@ && \
    $(call ND_tr,$(NDIFF_R) $(NDFLAGS)) $(notdir $(NDFILES_BAS)) || \
    echo "error: $@ failed, check tests$/$@ for details"
endef

# end of makefile
