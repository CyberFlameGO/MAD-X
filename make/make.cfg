# |
# o---------------------------------------------------------------------o
# |
# | MAD makefile - config
# |
# o---------------------------------------------------------------------o
# |
# | Methodical Accelerator Design
# |
# | Copyright (c) 2011+ CERN, mad@cern.ch
# |
# | For more information, see http://cern.ch/mad
# |
# o---------------------------------------------------------------------o
# |
# | $Id$
# |

# detect operating system
# OSTYPE = Linux, Darwin, Cygwin, Windows (or empty)
# OSARCH = i386, i686, x86, x86_64, amd64, ia64 (or empty)
ifeq ($(windir),)
OSTYPE := $(shell uname -s)
OSARCH := $(shell uname -m)
OSTYPE := $(patsubst CYGWIN%,Cygwin,$(OSTYPE))
else
OSTYPE := $(findstring Windows,$(shell ver))
OSARCH := $(PROCESSOR_ARCHITECTURE)
endif

# some useful command and variables
ifeq ($(OSTYPE),Windows)
/     := $(strip \ )
LS    := dir /L /B
MV    := move
RM    := del /f
RMDIR := rmdir /s /q
CAT   := more
HOME  := $(HOMEDRIVE)$(HOMEPATH)
else
/     := /
LS    := ls -1
MV    := mv -f
RM    := rm -f
RMDIR := rm -fr
CAT   := cat
endif

# set command echo (SHOW=yes -> trace commands & remove echo)
_ := $(if $(call eq,$(SHOW),yes),,@)
ifneq ($(OSTYPE),Windows)
E := $(if $(call eq,$(SHOW),yes),@ \#,@ echo)
else
E := $(if $(call eq,$(SHOW),yes),@ rem,@ echo)
endif

# convert forward to backward slashes
ifeq ($(OSTYPE),Windows)
f2bs = $(subst /,\,$1)
else
f2bs = $1
endif

# detect ARCH if requested
ifeq ($(ARCH),detect)
ARCH := $(if $(findstring 64,$(OSARCH)),64,32)
endif

# build directory (FC may be removed in near future)
ifeq ($(FC),)
OBJDIR := $(OSTYPE)$(ARCH)
else
OBJDIR := $(OSTYPE)$(ARCH)_$(FC)
endif

# project's name
PROJECT := $(PROJECT)$(ARCH)

# default target
.DEFAULT_GOAL := $(PROJECT)

# add default target to make commands
ifeq ($(MAKECMDGOALS),)
MAKECMDGOALS := $(PROJECT)
endif

# standard included settings
CCNAME  := $(CC)
CXXNAME := $(CXX)
FCNAME  := $(FC)
LDNAME  := $(LD)

# standard translation settings
CC_tr  = $(strip $1)
CXX_tr = $(strip $1)
FC_tr  = $(strip $1)
LD_tr  = $(strip $1)

# non-build targets
NOBUILD += clean% info%

# standard defines
ifeq ($(DEBUG),yes)
CPPFLAGS += -D_DEBUG
endif

ifeq ($(PROFILE),yes)
CPPFLAGS += -D_PROFILE
endif

ifeq ($(PLUGIN),yes)
CPPFLAGS += -D_PLUGIN
endif

# create build directory
__DOIT := $(call mkdir,$(OBJDIR))

# clear suffixes (avoid misbehavior)
.SUFFIXES:

# end of makefile
