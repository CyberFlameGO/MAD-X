! test for ptc_twiss,initial_map_manual=true;
! it 
! 1. reads provided fort.18 with one turn map
! 2. calculates the corresponding closed solution (via normal form)
! 3. tracks this solution through the layout
! 
!Good for passing initial conditions from ring to transfer line calculations, for example

call, file="../share/LEIR/LEIR.seqx";


eg :=  0.938272+0.0042+10000; !  ... in GeV 

eg :=  0.938272*2.8385; !  ... in GeV on transition
eg :=  0.938272*1.1547; !  ... in GeV beta = 0.5

beam, particle = proton, energy = eg;  

use, period=LEIR;


select,flag=twiss,clear;
select, flag=twiss, column=name,s,beta11,beta22,alfa11,alfa22,mu1,mu2,disp1,disp2,
                          x,px,y,py,t,pt,
                          re11,re12,re13,re14,re15,re16,
                          re21,re22,re23,re24,re25,re26,
                          re31,re32,re33,re34,re35,re36,
                          re41,re42,re43,re44,re45,re46,
                          re51,re52,re53,re54,re55,re56,
                          re61,re62,re63,re64,re65,re66;



ptc_create_universe;
  ptc_create_layout, model=1, method=6, nst=5, exact=true, closed_layout=true;

  !!!!!       T I M E   F A L S E,   T O T P A T H  F A L S E
  ptc_setswitch, debuglevel=0, exact_mis=true, time=true, totalpath=false;
  
  
  ptc_twiss,table="twiss", icase=56,no=2,initial_map_manual;

  write, table=twiss, file="leir.56dt.ptc.twiss";
  write, table=ptc_twiss_summary, file="leir.56dt.ptc.summ.twiss";

  ptc_twiss,table="twiss", icase=56,no=2,initial_map_manual, rmatrix;
  write, table=twiss, file="leir.56dt.ptc.mtx.twiss";

  ptc_twiss,table="twiss", icase=56,no=2,initial_map_manual, ignore_map_orbit;
  write, table=twiss, file="leir.56dt.ptc.noorb.twiss";
   
  
ptc_end;

removefile, file="Maxwellian_bend_for_ptc.txt";

stop;

plot, haxis=s, vaxis=beta11,beta22, colour=100;
plot, haxis=s, vaxis=disp1, colour=100;
plot, haxis=s, vaxis=x, colour=100;

