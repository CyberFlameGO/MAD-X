Option, -info; // avoid redefinition info

create, table=test, column=a,b;

// testing fill

a=9;    b=9;        fill, table=test, row= 2; // out of bounds
a=9;    b=9;        fill, table=test, row=-1; // out of bounds

a=9;    b=9;        fill, table=test, row=1; // adds row since number of rows is still 0 and fills 

a=9;    b=9;        fill, table=test; // row=0 is default and adds a row to the table
a=5.32; b=-3.2;     fill, table=test, row=0;

a=2;    b=4;        fill, table=test, row= 2; // filling again an already existing row
a=1;    b=2;        fill, table=test, row=-3; // negative row number

a=9;    b=9;        fill, table=test, row=-4; // out of bounds
a=9;    b=9;        fill, table=test, row= 4; // out of bounds


// testing fill at row=len+1
create table=fill, column=a,b;
len = table(fill, tablelength); value, len;
fill, table=fill, row=len+1; 
fill, table=fill, row=len+2;
fill, table=fill, row=len+3;
fill, table=fill, row=len+4;
lenf = table(fill, tablelength); value, lenf, len+4;


// testing setvars

a=0; b=0;
setvars, table=test, row=1;
value, a,b;

a=0; b=0;
setvars, table=test, row=4; // should be out of bounds
value, a,b;

a=0; b=0;
setvars, table=test, row=-1; // should be values for last row
value, a,b;

a=0; b=0;
setvars, table=test, row=-2; // should be values for penultimate row
value, a,b;

a=0; b=0;
setvars, table=test, row=-4; // should be out of bound
value, a,b;

a=0; b=0;
setvars, table=test; // use default row=-1, should be values for last row
value, a,b;

a=0; b=0;
setvars, table=test, row=0; // should be out of bound
value, a,b;



// testing setvars_lin with linear interpolation

t=0.37;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=1, param=t;
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=2, param=t;
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=3, param=t;
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=4, param=t; // out of bounds
show, a,b; value, a,b;

// testing negative row number to access tables from last row in reverse order

a=0; b=0;
setvars_lin, table=test, row1=1, row2=-1, param=t; // row2 is last row
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=-2, param=t; // row2 is penultimate row
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=-3, param=t; // row2 is antepenultimate row (first row)
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=-4, param=t; // out of bounds
show, a,b; value, a,b;

// testing zero row number and default values 

a=0; b=0;
setvars_lin, table=test, row1=0, row2=2, param=t; // out of bounds row1
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=0, param=t; // out of bounds row2
show, a,b; value, a,b;

interp=0.37; // interp as value
a=0; b=0;
setvars_lin, table=test, row1=1, row2=2; // default param is interp
show, a,b; value, a,b;

interp := t; // interp as expression
a=0; b=0;
setvars_lin, table=test, row1=1, row2=2; // default param is interp
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, param=t; // default rows are 0 and 0
show, a,b; value, a,b;

a=0; b=0;
setvars_lin, table=test, row1=1, row2=2, param=-0.37; // explicit param
show, a,b; value, a,b;

// testing extrapolation with param outside of [0,1]

t2=-2; a=0; b=0;
setvars_lin, table=test, row1=1, row2=2, param=t2;
show, a,b; value, a,b;

t3=3; a=0; b=0;
setvars_lin, table=test, row1=1, row2=2, param=t3;
show, a,b; value, a,b;


exit;
