# |
# o---------------------------------------------------------------------o
# |
# | MAD makefile - Tests
# |
# o---------------------------------------------------------------------o
# |
# | Methodical Accelerator Design
# |
# | Copyright (c) 2011+ CERN, mad@cern.ch
# |
# | For more information, see http://cern.ch/mad
# |
# o---------------------------------------------------------------------o
# |
# | $Id$
# |

# 2014-May-23  14:51:22  ghislain: 
#		 reinstated test-ptc-twiss that had disappeared from this file
# 	         merged test-twiss-7 with test-emit-2 and suppressed test-emit-2
# 2014-Aug-18  16:09:41  ghislain: 
#                added test-line testsuite with first test for repetition count 
#                for element vs line
# 
# 2015-Apr-01  17:47:56  ghislain:
#                added shrink tests in test-setvars_lin and renamed to test-table 

#################################################
# testsuite

# variables:
# tests-all  : contains all tests        (includes tests-long)
# tests-long : contains all long tests   (overlaps tests-all)

# rules (commands):
# tests      : runs tests-all not in tests-long
# tests-all  : runs tests-all

# tests order
tests-all = \
test-table \
test-memory \
\
test-makethin test-makethin-2 test-makethin-3 \
test-survey test-survey-2 \
test-track test-track-2 test-track-3 test-track-4 test-track-5 test-track-6 \
test-track-7 test-track-8 test-track-9 test-track-10 test-track-11 \
test-twiss test-twiss-2 test-twiss-3 test-twiss-4 test-twiss-5 \
test-twiss-6 test-twiss-8 test-twiss-9 test-twiss-10 test-twiss-11 \
test-cororbit test-cororbit-2 test-cororbit-3 test-cororbit-4 \
test-emit test-emit-2 \
test-ibs test-ibs-2 test-ibs-3 test-ibs-4 \
test-error test-error-2 test-error-3 \
test-dynap \
test-c6t test-c6t-2 test-c6t-3 test-c6t-4 \
test-thick-quad test-thick-quad-2 test-thick-quad-3 \
test-thick-dipole test-thick-dipole-2 test-thick-dipole-3 \
test-jacobian test-jacobian-2 test-jacobian-knobs \
test-match test-match-2 test-match-3 test-match-4 \
test-match-5 test-match-6 test-match-7 test-match-8 \
test-aperture test-aperture-2 test-aperture-3 \
test-beam \
\
test-rfmultipole test-rfmultipole-2 test-rfmultipole-3 test-rfmultipole-4 test-rfmultipole-5 test-rfmultipole-6 \
\
test-ptc-twiss-1 test-ptc-twiss-2 test-ptc-twiss-3 \
test-ptc-twiss-old1 test-ptc-twiss-old2 test-ptc-twiss-old3 test-ptc-twiss-old4 test-ptc-twiss-old5 $(call onwin,,test-ptc-twiss-old6) test-ptc-twiss-old7 \
test-ptc-twiss-5D test-ptc-twiss-5Dt test-ptc-twiss-56D test-ptc-twiss-56Dt test-ptc-twiss-56Dl test-ptc-twiss-56Dtl test-ptc-twiss-6D \
test-ptc-normal test-ptc-twiss-maptable \
test-ptc-trackline test-ptc-trackline-2 \
test-touschek test-touschek-2 \
test-sequence test-sequence-2 test-sequence-3 test-sequence-4 test-sequence-5 test-sequence-6 \
test-line \
test-plot test-plot-2 \
\
$(call onlxi64,$(user-cases))

# same order as tests-all, tests that take +10 seconds
# to know the timing: make tests-all TIMER=time (on Unixes)
tests-long = \
test-memory \
test-track-7 test-track-8 test-track-10 test-track-11 \
test-dynap \
test-c6t-4 \
test-match-6 test-match-7 \
test-ptc-twiss-2 \
$(call onwin,,test-ptc-twiss-old6) test-ptc-twiss-old7 \
test-touschek test-touschek-2 \
\
$(call onlxi64,$(user-cases))

# user-cases are run only with tests-all on Lxplus + AFS + Intel 64 bit
user-cases = \
test-lhc test-hllhc

# tests dependencies
#test-c6t:     test-makethin-2
#test-track-2: test-makethin-2
#test-track-7: test-makethin-2
#test-track-8: test-makethin-2

# lexicographical order
tests-to-setup = 

# testsuite titles (attached to first test of the suite, lex. order)
test-aperture:       TESTSUITE := Aperture testsuite
test-beam:           TESTSUITE := Beam testsuite
test-c6t:            TESTSUITE := SixTrack Conversion testsuite
test-cororbit:       TESTSUITE := Orbit Correction testsuite
test-dynap:          TESTSUITE := Dynamic Aperture testsuite
test-emit:           TESTSUITE := Emit testsuite
test-error:          TESTSUITE := Error testsuite
test-ibs:            TESTSUITE := IBS testsuite
test-jacobian:       TESTSUITE := Jacobian testsuite
test-line:           TESTSUITE := Line testsuite
test-lhc:            TESTSUITE := LHC/HLLHC testsuite
test-makethin:       TESTSUITE := Makethin testsuite
test-match:          TESTSUITE := Matching testsuite
test-memory:         TESTSUITE := Memory Management testsuite
test-plot:           TESTSUITE := Plot Package testsuite
test-ptc-normal:     TESTSUITE := PTC Normal testsuite
test-ptc-trackline:  TESTSUITE := PTC Trackline testsuite
test-ptc-twiss:      TESTSUITE := PTC Twiss testsuite
test-rfmultipole:    TESTSUITE := RF Multipole testsuite
test-sequence:	     TESTSUITE := Sequence testsuite
test-survey:         TESTSUITE := Survey testsuite
test-table:	     TESTSUITE := Table testsuite
test-thick-quad:     TESTSUITE := Thick Element testsuite
test-touschek:       TESTSUITE := Touschek testsuite
test-track:          TESTSUITE := Track testsuite
test-twiss:          TESTSUITE := Twiss testsuite

# end of testsuite
#################################################

# useful macros
onwin    = $(if       $(call eq,$(OSTYPE),Windows),$1,$2)
onlxplus = $(if $(and $(call eq,$(OSTYPE),Linux),$(wildcard /afs/cern.ch/eng/lhc/optics)),$1,$2)
onlxi64  = $(if $(and $(call eq,$(OSTYPE),Linux),\
                      $(call eq,$(COMP),intel),\
                      $(call eq,$(ARCH),64),\
                      $(wildcard /afs/cern.ch/eng/lhc/optics)),$1,$2)

# madx supported command for tests
ifndef MADX
MADXCMD := $(firstword $(wildcard $(PROJECT)$(ARCH)$(BINARY_EXT) $(PROJECT)$(BINARY_EXT)))
MADX    := $(if $(MADXCMD),..$/..$/$(MADXCMD),$(PROJECT)_dev$(ARCH)$(BINARY_EXT))
endif

TESTCMD = $(TIMER) $(MADX) $(@F).madx

# end of makefile
